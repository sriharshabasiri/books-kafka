for server in jboss_servers:
        remote_host = server['host']
        remote_user = server['user']
        standalone_file_path = server['standalone_file']
        
        # For each user, back up the standalone.xml and replace old password with the new encrypted one
        for user, passwords in users.items():
            old_encrypted_password = passwords['old_encrypted']
            new_encrypted_password = passwords['new_encrypted']
            
            # SSH command to back up the standalone.xml file and update it
            backup_cmd = f"cp {standalone_file_path} {standalone_file_path}.bak"
            update_cmd = f"sed -i 's/{old_encrypted_password}/{new_encrypted_password}/g' {standalone_file_path}"
            
            # Full SSH command
            ssh_cmd = f"ssh {remote_user}@{remote_host} \"{backup_cmd}; {update_cmd}\""
            
            # Execute the command via subprocess
            result = subprocess.run(ssh_cmd, shell=True, stdout=subprocess.PIPE, stderr=subprocess.PIPE)

            if result.returncode != 0:
                # If there's an error, print it
                print(f"Error updating standalone.xml on {remote_host} for user {user}: {result.stderr.decode('utf-8')}")
            else:
                print(f"Updated standalone.xml on {remote_host} for user {user}")
