
---
- name: Set up Python virtual environment and install hvac
  hosts: localhost
  vars:
    venv_path: "/path/to/venv"  # Specify the path where the venv should be created
  tasks:
    - name: Ensure Python3 is installed
      ansible.builtin.package:
        name: python3
        state: present
      become: yes

    - name: Create a Python virtual environment
      ansible.builtin.command:
        cmd: "python3 -m venv {{ venv_path }}"
      args:
        creates: "{{ venv_path }}"  # Ensures idempotency (only creates if it doesn't exist)

    - name: Install hvac in the virtual environment
      ansible.builtin.pip:
        name: hvac
        virtualenv: "{{ venv_path }}"
        state: present

    - name: Set ansible_python_interpreter to the venv Python
      set_fact:
        ansible_python_interpreter: "{{ venv_path }}/bin/python"

- name: Use the virtual environment for subsequent tasks
  hosts: localhost
  vars:
    venv_path: "/path/to/venv"  # Same path as above
  environment:
    PATH: "{{ venv_path }}/bin:{{ ansible_env.PATH }}"  # Add venv binaries to PATH
  tasks:
    - name: Verify Python interpreter is from the venv
      ansible.builtin.command:
        cmd: "which python"
      register: python_path

    - name: Debug Python interpreter path
      ansible.builtin.debug:
        msg: "Python interpreter path: {{ python_path.stdout }}"

    - name: Verify hvac is installed in the venv
      ansible.builtin.command:
        cmd: "{{ venv_path }}/bin/python -c 'import hvac; print(hvac.__version__)'"
      register: hvac_version

    - name: Debug hvac version
      ansible.builtin.debug:
        msg: "hvac version: {{ hvac_version.stdout }}"
