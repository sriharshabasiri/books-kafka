import requests
import pandas as pd
import smtplib
from email.mime.multipart import MIMEMultipart
from email.mime.text import MIMEText

# ServiceNow API Configuration
SN_INSTANCE = 'your-instance.service-now.com'  # Replace with your ServiceNow instance
SN_USER = 'your_username'  # Replace with your ServiceNow username
SN_PASSWORD = 'your_password'  # Replace with your ServiceNow password
REPORT_SYS_ID = 'your_report_sys_id'  # Replace with the sys_id of your report

# Email Configuration
SMTP_SERVER = 'smtp.your-email-provider.com'  # Replace with your SMTP server
SMTP_PORT = 587  # Replace with your SMTP port
EMAIL_FROM = 'your-email@example.com'  # Replace with your email address
EMAIL_TO = 'team-email@example.com'  # Replace with the recipient email address
EMAIL_PASSWORD = 'your-email-password'  # Replace with your email password

def fetch_service_now_report():
    # ServiceNow API URL
    url = f'https://{SN_INSTANCE}/api/now/ui/report/{REPORT_SYS_ID}'
    
    # Set up authentication
    auth = (SN_USER, SN_PASSWORD)
    
    # Make the API request
    response = requests.get(url, auth=auth)
    
    if response.status_code == 200:
        # Parse the JSON response
        data = response.json().get('result', {}).get('data', [])
        return data
    else:
        print(f"Failed to fetch report. Status code: {response.status_code}")
        return None

def format_report_data(data):
    # Convert JSON data to a pandas DataFrame
    df = pd.DataFrame(data)
    return df

def send_email(subject, body):
    # Create the email
    msg = MIMEMultipart()
    msg['From'] = EMAIL_FROM
    msg['To'] = EMAIL_TO
    msg['Subject'] = subject
    
    # Attach the body as HTML
    msg.attach(MIMEText(body, 'html'))
    
    # Send the email
    try:
        server = smtplib.SMTP(SMTP_SERVER, SMTP_PORT)
        server.starttls()
        server.login(EMAIL_FROM, EMAIL_PASSWORD)
        server.sendmail(EMAIL_FROM, EMAIL_TO, msg.as_string())
        server.quit()
        print("Email sent successfully!")
    except Exception as e:
        print(f"Failed to send email: {e}")

def main():
    # Fetch the report data
    report_data = fetch_service_now_report()
    
    if report_data:
        # Format the data into a table
        df = format_report_data(report_data)
        
        # Convert DataFrame to HTML
        html_table = df.to_html(index=False)
        
        # Create the email body
        email_subject = "ServiceNow Report"
        email_body = f"""
        <h2>ServiceNow Report</h2>
        <p>Here is the output of the report:</p>
        {html_table}
        """
        
        # Send the email
        send_email(email_subject, email_body)
    else:
        print("No data to send.")

if __name__ == "__main__":
    main()
