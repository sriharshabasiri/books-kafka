import React, { useState } from 'react';
import axios from 'axios';

function App() {
  const [environment, setEnvironment] = useState('');
  const [action, setAction] = useState('');
  const [status, setStatus] = useState('');

  const environments = [
    'dev1', 'dev2', 'dev3', 'dev4', 'dev5', 'dev6', 'dev7', 'dev8', 'dev9', 'dev10', 
    'performance', 'ESQM'
  ];

  const handleAction = async (actionType) => {
    if (!environment) {
      alert('Please select an environment.');
      return;
    }

    try {
      const response = await axios.post('http://localhost:8000/api/execute/', {
        environment,
        action: actionType
      });
      setStatus(response.data.status);
    } catch (error) {
      setStatus('Error: Failed to execute action.');
      console.error(error);
    }
  };

  return (
    <div className="App">
      <h1>Service Management Portal</h1>
      <div>
        <label>Select Environment: </label>
        <select value={environment} onChange={(e) => setEnvironment(e.target.value)}>
          <option value="">--Select--</option>
          {environments.map((env, index) => (
            <option key={index} value={env}>{env}</option>
          ))}
        </select>
      </div>
      <div>
        <button onClick={() => handleAction('start')}>Start Services</button>
        <button onClick={() => handleAction('stop')}>Stop Services</button>
      </div>
      <div>
        <h3>Status: {status}</h3>
      </div>
    </div>
  );
}

export default App;



const handleAction = async (actionType) => {
  if (!environment) {
    alert('Please select an environment.');
    return;
  }

  try {
    const response = await axios.post('http://localhost:8000/api/execute/', {
      environment,
      action: actionType,
    });
    setStatus(response.data.status);
  } catch (error) {
    setStatus('Error: Failed to execute action.');
    console.error(error);
  }
};
